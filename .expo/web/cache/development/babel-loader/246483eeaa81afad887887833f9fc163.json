{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\mobileGame\\\\levels\\\\LevelTenth.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons';\nimport Header from \"../components/Header\";\nimport Score from \"../components/Score\";\nimport Card from \"../components/GameCard\";\nimport helpers from \"./helpers\";\nimport { cards } from \"../components/mocks\";\n\nvar LevelTenth = function LevelTenth(props) {\n  var cards = props.cards;\n  var sources = {\n    'fontawesome': FontAwesome,\n    'entypo': Entypo,\n    'ionicons': Ionicons\n  };\n  var clone = JSON.parse(JSON.stringify(cards));\n  cards = (_readOnlyError(\"cards\"), cards.concat(clone));\n  cards.map(function (obj) {\n    var id = Math.random().toString(36).substring(7);\n    obj.id = id;\n    obj.src = sources[obj.src];\n    obj.is_open = false;\n  });\n  cards = (_readOnlyError(\"cards\"), cards.shuffle());\n\n  var _useState = useState({\n    current_selection: [],\n    selected_pairs: [],\n    score: 0,\n    cards: cards\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var resetCards = function resetCards(props) {\n    var cards = cards.map(function (obj) {\n      obj.is_open = false;\n      return obj;\n    });\n    cards = cards.shuffle();\n    setData({\n      current_selection: [],\n      selected_pairs: [],\n      cards: cards,\n      score: 0\n    });\n  };\n\n  var renderRows = function renderRows() {\n    var contents = getRowContents(data.cards);\n    return contents.map(function (cards, index) {\n      return React.createElement(View, {\n        key: index,\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, renderCards(cards));\n    });\n  };\n\n  var renderCards = function renderCards(cards) {\n    return cards.map(function (card, index) {\n      return React.createElement(Card, {\n        key: index,\n        src: card.src,\n        name: card.name,\n        color: card.color,\n        is_open: card.is_open,\n        clickCard: clickCard(card.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      });\n    });\n  };\n\n  var clickCard = function clickCard(id) {\n    var selected_pairs = data.selected_pairs;\n    var current_selection = data.current_selection;\n    var score = data.score;\n    var index = data.cards.findIndex(function (card) {\n      return card.id == id;\n    });\n    var cards = data.cards;\n\n    if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\n      cards[index].is_open = true;\n      current_selection.push({\n        index: index,\n        name: cards[index].name\n      });\n\n      if (current_selection.length == 2) {\n        if (current_selection[0].name == current_selection[1].name) {\n          score += 1;\n          selected_pairs.push(cards[index].name);\n        } else {\n          cards[current_selection[0].index].is_open = false;\n          setTimeout(function () {\n            cards[index].is_open = false;\n            setData({\n              cards: cards\n            });\n          }, 500);\n        }\n\n        current_selection = [];\n      }\n\n      setData({\n        score: score,\n        cards: cards,\n        current_selection: current_selection\n      });\n    }\n  };\n\n  var getRowContents = function getRowContents(cards) {\n    var contents_r = [];\n    var contents = [];\n    var count = 0;\n    cards.forEach(function (item) {\n      count += 1;\n      contents.push(item);\n\n      if (count == 5) {\n        contents_r.push(contents);\n        count = 0;\n        contents = [];\n      }\n    });\n    return contents_r;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, renderRows()), React.createElement(Score, {\n    score: data.score,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: resetCards(),\n    title: \"Reset\",\n    color: \"#008CFA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  body: {\n    flex: 18,\n    justifyContent: 'space-between',\n    padding: 10,\n    marginTop: 20\n  }\n});\nexport default LevelTenth;","map":{"version":3,"sources":["C:/Users/test/Desktop/mobileGame/levels/LevelTenth.js"],"names":["React","useState","Ionicons","FontAwesome","Entypo","Header","Score","Card","helpers","cards","LevelTenth","props","sources","clone","JSON","parse","stringify","concat","map","obj","id","Math","random","toString","substring","src","is_open","shuffle","current_selection","selected_pairs","score","data","setData","resetCards","renderRows","contents","getRowContents","index","styles","row","renderCards","card","name","color","clickCard","findIndex","indexOf","push","length","setTimeout","contents_r","count","forEach","item","container","body","StyleSheet","create","flex","alignSelf","backgroundColor","flexDirection","justifyContent","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Button } from 'react-native';\r\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons'; // 6.2.2\r\n\r\nimport Header from '../components/Header';\r\nimport Score from '../components/Score';\r\nimport Card from '../components/GameCard';\r\n\r\nimport helpers from './helpers';\r\n\r\nimport { cards } from '../components/mocks'\r\n\r\nconst LevelTenth = props => {\r\n\r\n    const { cards } = props\r\n\r\n    let sources = {\r\n        'fontawesome': FontAwesome,\r\n        'entypo': Entypo,\r\n        'ionicons': Ionicons\r\n    };\r\n\r\n    // let cards = [\r\n    //     {\r\n    //         src: 'fontawesome',\r\n    //         name: 'heart',\r\n    //         color: 'red'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'feather',\r\n    //         color: '#7d4b12'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'flashlight',\r\n    //         color: '#f7911f'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'flower',\r\n    //         color: '#37b24d'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'moon',\r\n    //         color: '#ffd43b'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'youtube',\r\n    //         color: '#FF0000'\r\n    //     },\r\n    //     {\r\n    //         src: 'entypo',\r\n    //         name: 'shop',\r\n    //         color: '#5f5f5f'\r\n    //     },\r\n    //     {\r\n    //         src: 'fontawesome',\r\n    //         name: 'github',\r\n    //         color: '#24292e'\r\n    //     },\r\n    //     {\r\n    //         src: 'fontawesome',\r\n    //         name: 'skype',\r\n    //         color: '#1686D9'\r\n    //     },\r\n    //     {\r\n    //         src: 'fontawesome',\r\n    //         name: 'send',\r\n    //         color: '#1c7cd6'\r\n    //     },\r\n    //     {\r\n    //         src: 'ionicons',\r\n    //         name: 'ios-magnet',\r\n    //         color: '#d61c1c'\r\n    //     },\r\n    //     {\r\n    //         src: 'ionicons',\r\n    //         name: 'logo-facebook',\r\n    //         color: '#3C5B9B'\r\n    //     }\r\n\r\n    // ];\r\n\r\n    let clone = JSON.parse(JSON.stringify(cards));\r\n\r\n    cards = cards.concat(clone);\r\n    cards.map((obj) => {\r\n        let id = Math.random().toString(36).substring(7);\r\n        obj.id = id;\r\n        obj.src = sources[obj.src];\r\n        obj.is_open = false;\r\n    });\r\n\r\n    cards = cards.shuffle();\r\n    const [data, setData] = useState({\r\n        current_selection: [],\r\n        selected_pairs: [],\r\n        score: 0,\r\n        cards: cards\r\n    })\r\n\r\n    const resetCards = (props) => {\r\n        let cards = cards.map((obj) => {\r\n            obj.is_open = false;\r\n            return obj;\r\n        });\r\n\r\n        cards = cards.shuffle();\r\n\r\n        setData({\r\n            current_selection: [],\r\n            selected_pairs: [],\r\n            cards: cards,\r\n            score: 0\r\n        });\r\n    }\r\n\r\n\r\n    const renderRows = () => {\r\n\r\n        let contents = getRowContents(data.cards);\r\n        return contents.map((cards, index) => {\r\n            return (\r\n                <View key={index} style={styles.row}>\r\n                    { renderCards(cards)}\r\n                </View>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const renderCards = (cards) => {\r\n        return cards.map((card, index) => {\r\n            return (\r\n                <Card\r\n                    key={index}\r\n                    src={card.src}\r\n                    name={card.name}\r\n                    color={card.color}\r\n                    is_open={card.is_open}\r\n                    clickCard={clickCard(card.id)}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    const clickCard = (id) => {\r\n        let selected_pairs = data.selected_pairs;\r\n        let current_selection = data.current_selection;\r\n        let score = data.score;\r\n\r\n        let index = data.cards.findIndex((card) => {\r\n            return card.id == id;\r\n        });\r\n\r\n        let cards = data.cards;\r\n\r\n        if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\r\n\r\n            cards[index].is_open = true;\r\n\r\n            current_selection.push({\r\n                index: index,\r\n                name: cards[index].name\r\n            });\r\n\r\n            if (current_selection.length == 2) {\r\n                if (current_selection[0].name == current_selection[1].name) {\r\n                    score += 1;\r\n                    selected_pairs.push(cards[index].name);\r\n                } else {\r\n\r\n                    cards[current_selection[0].index].is_open = false;\r\n\r\n                    setTimeout(() => {\r\n                        cards[index].is_open = false;\r\n                        setData({\r\n                            cards: cards\r\n                        });\r\n                    }, 500);\r\n                }\r\n\r\n                current_selection = [];\r\n            }\r\n\r\n            setData({\r\n                score: score,\r\n                cards: cards,\r\n                current_selection: current_selection\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getRowContents = (cards) => {\r\n        let contents_r = [];\r\n        let contents = [];\r\n        let count = 0;\r\n        cards.forEach((item) => {\r\n            count += 1;\r\n            contents.push(item);\r\n            if (count == 5) {\r\n                contents_r.push(contents)\r\n                count = 0;\r\n                contents = [];\r\n            }\r\n        });\r\n\r\n        return contents_r;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Header />\r\n            <View style={styles.body}>\r\n                {\r\n                    renderRows()\r\n                }\r\n            </View>\r\n            <Score score={data.score} />\r\n            <Button\r\n                onPress={resetCards()}\r\n                title=\"Reset\"\r\n                color=\"#008CFA\"\r\n            />\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignSelf: 'stretch',\r\n        backgroundColor: '#fff'\r\n    },\r\n    row: {\r\n        flex: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    body: {\r\n        flex: 18,\r\n        justifyContent: 'space-between',\r\n        padding: 10,\r\n        marginTop: 20\r\n    }\r\n});\r\n\r\nexport default LevelTenth\r\n"]},"metadata":{},"sourceType":"module"}