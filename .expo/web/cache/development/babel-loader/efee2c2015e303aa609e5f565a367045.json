{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\mobileGame\\\\levels\\\\LevelTenth.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons';\nimport Header from \"../components/Header\";\nimport Score from \"../components/Score\";\nimport Card from \"../components/GameCard\";\nimport helpers from \"./helpers\";\n\nvar LevelTenth = function LevelTenth(props) {\n  var sources = {\n    'fontawesome': FontAwesome,\n    'entypo': Entypo,\n    'ionicons': Ionicons\n  };\n  var cards = [{\n    src: 'fontawesome',\n    name: 'heart',\n    color: 'red'\n  }, {\n    src: 'entypo',\n    name: 'feather',\n    color: '#7d4b12'\n  }, {\n    src: 'entypo',\n    name: 'flashlight',\n    color: '#f7911f'\n  }, {\n    src: 'entypo',\n    name: 'flower',\n    color: '#37b24d'\n  }, {\n    src: 'entypo',\n    name: 'moon',\n    color: '#ffd43b'\n  }, {\n    src: 'entypo',\n    name: 'youtube',\n    color: '#FF0000'\n  }, {\n    src: 'entypo',\n    name: 'shop',\n    color: '#5f5f5f'\n  }, {\n    src: 'fontawesome',\n    name: 'github',\n    color: '#24292e'\n  }, {\n    src: 'fontawesome',\n    name: 'skype',\n    color: '#1686D9'\n  }, {\n    src: 'fontawesome',\n    name: 'send',\n    color: '#1c7cd6'\n  }, {\n    src: 'ionicons',\n    name: 'ios-magnet',\n    color: '#d61c1c'\n  }, {\n    src: 'ionicons',\n    name: 'logo-facebook',\n    color: '#3C5B9B'\n  }];\n  var clone = JSON.parse(JSON.stringify(cards));\n  _this.cards = cards.concat(clone);\n\n  _this.cards.map(function (obj) {\n    var id = Math.random().toString(36).substring(7);\n    obj.id = id;\n    obj.src = sources[obj.src];\n    obj.is_open = false;\n  });\n\n  _this.cards = _this.cards.shuffle();\n  _this.state = {\n    current_selection: [],\n    selected_pairs: [],\n    score: 0,\n    cards: _this.cards\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, _this.renderRows.call(_this)), React.createElement(Score, {\n    score: _this.state.score,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: _this.resetCards,\n    title: \"Reset\",\n    color: \"#008CFA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }));\n\n  var resetCards = function resetCards() {\n    var cards = _this.cards.map(function (obj) {\n      obj.is_open = false;\n      return obj;\n    });\n\n    cards = cards.shuffle();\n\n    _this.setState({\n      current_selection: [],\n      selected_pairs: [],\n      cards: cards,\n      score: 0\n    });\n  };\n\n  var renderRows = function renderRows() {\n    var contents = _this.getRowContents(_this.state.cards);\n\n    return contents.map(function (cards, index) {\n      return React.createElement(View, {\n        key: index,\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, _this.renderCards(cards));\n    });\n  };\n\n  var renderCards = function renderCards(cards) {\n    return cards.map(function (card, index) {\n      return React.createElement(Card, {\n        key: index,\n        src: card.src,\n        name: card.name,\n        color: card.color,\n        is_open: card.is_open,\n        clickCard: _this.clickCard.bind(_this, card.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      });\n    });\n  };\n\n  var clickCard = function clickCard(id) {\n    var selected_pairs = _this.state.selected_pairs;\n    var current_selection = _this.state.current_selection;\n    var score = _this.state.score;\n\n    var index = _this.state.cards.findIndex(function (card) {\n      return card.id == id;\n    });\n\n    var cards = _this.state.cards;\n\n    if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\n      cards[index].is_open = true;\n      current_selection.push({\n        index: index,\n        name: cards[index].name\n      });\n\n      if (current_selection.length == 2) {\n        if (current_selection[0].name == current_selection[1].name) {\n          score += 1;\n          selected_pairs.push(cards[index].name);\n        } else {\n          cards[current_selection[0].index].is_open = false;\n          setTimeout(function () {\n            cards[index].is_open = false;\n\n            _this.setState({\n              cards: cards\n            });\n          }, 500);\n        }\n\n        current_selection = [];\n      }\n\n      _this.setState({\n        score: score,\n        cards: cards,\n        current_selection: current_selection\n      });\n    }\n  };\n\n  var getRowContents = function getRowContents(cards) {\n    var contents_r = [];\n    var contents = [];\n    var count = 0;\n    cards.forEach(function (item) {\n      count += 1;\n      contents.push(item);\n\n      if (count == 5) {\n        contents_r.push(contents);\n        count = 0;\n        contents = [];\n      }\n    });\n    return contents_r;\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  body: {\n    flex: 18,\n    justifyContent: 'space-between',\n    padding: 10,\n    marginTop: 20\n  }\n});\nexport default LevelTenth;","map":{"version":3,"sources":["C:/Users/test/Desktop/mobileGame/levels/LevelTenth.js"],"names":["React","useState","Ionicons","FontAwesome","Entypo","Header","Score","Card","helpers","LevelTenth","props","sources","cards","src","name","color","clone","JSON","parse","stringify","concat","map","obj","id","Math","random","toString","substring","is_open","shuffle","state","current_selection","selected_pairs","score","styles","container","body","renderRows","call","resetCards","setState","contents","getRowContents","index","row","renderCards","card","clickCard","bind","findIndex","indexOf","push","length","setTimeout","contents_r","count","forEach","item","StyleSheet","create","flex","alignSelf","backgroundColor","flexDirection","justifyContent","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Button } from 'react-native';\r\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons'; // 6.2.2\r\n\r\nimport Header from '../components/Header';\r\nimport Score from '../components/Score';\r\nimport Card from '../components/GameCard';\r\n\r\nimport helpers from './helpers';\r\n\r\nconst LevelTenth = props => {\r\n\r\n    let sources = {\r\n        'fontawesome': FontAwesome,\r\n        'entypo': Entypo,\r\n        'ionicons': Ionicons\r\n    };\r\n\r\n    let cards = [\r\n        {\r\n            src: 'fontawesome',\r\n            name: 'heart',\r\n            color: 'red'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'feather',\r\n            color: '#7d4b12'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'flashlight',\r\n            color: '#f7911f'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'flower',\r\n            color: '#37b24d'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'moon',\r\n            color: '#ffd43b'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'youtube',\r\n            color: '#FF0000'\r\n        },\r\n        {\r\n            src: 'entypo',\r\n            name: 'shop',\r\n            color: '#5f5f5f'\r\n        },\r\n        {\r\n            src: 'fontawesome',\r\n            name: 'github',\r\n            color: '#24292e'\r\n        },\r\n        {\r\n            src: 'fontawesome',\r\n            name: 'skype',\r\n            color: '#1686D9'\r\n        },\r\n        {\r\n            src: 'fontawesome',\r\n            name: 'send',\r\n            color: '#1c7cd6'\r\n        },\r\n        {\r\n            src: 'ionicons',\r\n            name: 'ios-magnet',\r\n            color: '#d61c1c'\r\n        },\r\n        {\r\n            src: 'ionicons',\r\n            name: 'logo-facebook',\r\n            color: '#3C5B9B'\r\n        }\r\n\r\n    ];\r\n\r\n    let clone = JSON.parse(JSON.stringify(cards));\r\n\r\n    this.cards = cards.concat(clone);\r\n    this.cards.map((obj) => {\r\n        let id = Math.random().toString(36).substring(7);\r\n        obj.id = id;\r\n        obj.src = sources[obj.src];\r\n        obj.is_open = false;\r\n    });\r\n\r\n    this.cards = this.cards.shuffle();\r\n    this.state = {\r\n        current_selection: [],\r\n        selected_pairs: [],\r\n        score: 0,\r\n        cards: this.cards\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Header />\r\n            <View style={styles.body}>\r\n                {\r\n                    this.renderRows.call(this)\r\n                }\r\n            </View>\r\n            <Score score={this.state.score} />\r\n            <Button\r\n                onPress={this.resetCards}\r\n                title=\"Reset\"\r\n                color=\"#008CFA\"\r\n            />\r\n        </View>\r\n    );\r\n\r\n\r\n    const resetCards = () => {\r\n        let cards = this.cards.map((obj) => {\r\n            obj.is_open = false;\r\n            return obj;\r\n        });\r\n\r\n        cards = cards.shuffle();\r\n\r\n        this.setState({\r\n            current_selection: [],\r\n            selected_pairs: [],\r\n            cards: cards,\r\n            score: 0\r\n        });\r\n    }\r\n\r\n\r\n    const renderRows = () => {\r\n\r\n        let contents = this.getRowContents(this.state.cards);\r\n        return contents.map((cards, index) => {\r\n            return (\r\n                <View key={index} style={styles.row}>\r\n                    { this.renderCards(cards)}\r\n                </View>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const renderCards = (cards) => {\r\n        return cards.map((card, index) => {\r\n            return (\r\n                <Card\r\n                    key={index}\r\n                    src={card.src}\r\n                    name={card.name}\r\n                    color={card.color}\r\n                    is_open={card.is_open}\r\n                    clickCard={this.clickCard.bind(this, card.id)}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    const clickCard = (id) => {\r\n        let selected_pairs = this.state.selected_pairs;\r\n        let current_selection = this.state.current_selection;\r\n        let score = this.state.score;\r\n\r\n        let index = this.state.cards.findIndex((card) => {\r\n            return card.id == id;\r\n        });\r\n\r\n        let cards = this.state.cards;\r\n\r\n        if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\r\n\r\n            cards[index].is_open = true;\r\n\r\n            current_selection.push({\r\n                index: index,\r\n                name: cards[index].name\r\n            });\r\n\r\n            if (current_selection.length == 2) {\r\n                if (current_selection[0].name == current_selection[1].name) {\r\n                    score += 1;\r\n                    selected_pairs.push(cards[index].name);\r\n                } else {\r\n\r\n                    cards[current_selection[0].index].is_open = false;\r\n\r\n                    setTimeout(() => {\r\n                        cards[index].is_open = false;\r\n                        this.setState({\r\n                            cards: cards\r\n                        });\r\n                    }, 500);\r\n                }\r\n\r\n                current_selection = [];\r\n            }\r\n\r\n            this.setState({\r\n                score: score,\r\n                cards: cards,\r\n                current_selection: current_selection\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getRowContents = (cards) => {\r\n        let contents_r = [];\r\n        let contents = [];\r\n        let count = 0;\r\n        cards.forEach((item) => {\r\n            count += 1;\r\n            contents.push(item);\r\n            if (count == 5) {\r\n                contents_r.push(contents)\r\n                count = 0;\r\n                contents = [];\r\n            }\r\n        });\r\n\r\n        return contents_r;\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignSelf: 'stretch',\r\n        backgroundColor: '#fff'\r\n    },\r\n    row: {\r\n        flex: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    body: {\r\n        flex: 18,\r\n        justifyContent: 'space-between',\r\n        padding: 10,\r\n        marginTop: 20\r\n    }\r\n});\r\n\r\nexport default LevelTenth\r\n"]},"metadata":{},"sourceType":"module"}