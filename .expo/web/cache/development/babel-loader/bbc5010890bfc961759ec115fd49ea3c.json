{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/roman/mobileGame/components/Auth/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from \"../firebase\";\nimport { TextInput, Button, Snackbar, Portal, Dialog, Paragraph, Provider as PaperProvider } from \"react-native-paper\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      isLoading: false,\n      nameError: false,\n      emailError: false,\n      passwordError: false,\n      phoneError: false\n    };\n\n    _this.updateInputVal = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.userLogin = function () {\n      var email = _this.emailVadidation();\n\n      var password = _this.passwordValidation();\n\n      if (email && password) {\n        firebase.auth.signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function (res) {\n          console.log('User logged-in successfully!');\n\n          _this.setState({\n            isLoading: false,\n            email: '',\n            password: '',\n            errorMessage: ''\n          });\n\n          _this.props.navigation.navigate('TodoList');\n        }).catch(function (error) {\n          return _this.setState({\n            errorMessage: error.message\n          });\n        });\n      } else {\n        if (!email) {\n          _this.setState({\n            emailError: true\n          });\n        }\n\n        if (!password) {\n          _this.setState({\n            passwordError: true\n          });\n        }\n      }\n    };\n\n    _this.emailVadidation = function () {\n      if (_this.state.email === '') {\n        _this.setState({\n          emailError: true\n        });\n\n        return false;\n      }\n\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (reg.test(_this.state.email) === false) {\n        _this.setState({\n          emailError: true\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          emailError: false\n        });\n\n        return true;\n      }\n    };\n\n    _this.passwordValidation = function () {\n      if (_this.state.password.length < 8) {\n        _this.setState({\n          passwordError: true\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          passwordError: false\n        });\n\n        return true;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'email');\n        },\n        onBlur: function onBlur() {\n          return _this2.emailVadidation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }\n      }, this.state.emailError ? 'Error with email' : ''), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'password');\n        },\n        onBlur: function onBlur() {\n          return _this2.passwordValidation();\n        },\n        maxLength: 15,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, this.state.passwordError ? 'Error with password' : ''), React.createElement(Button, {\n        color: \"#621FF7\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return _this2.userLogin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"Login\"), React.createElement(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, \"Don't have account? Click here to signup\"), React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, this.state.errorMessage));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  inputStyle: {\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#ccc\",\n    borderBottomWidth: 1,\n    width: '100%',\n    height: '5%'\n  },\n  loginText: {\n    color: '#333333',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  errorText: {\n    fontSize: 10,\n    color: 'red',\n    alignSelf: 'center',\n    marginTop: 10\n  },\n  error: {\n    fontSize: 10,\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/home/roman/mobileGame/components/Auth/LoginScreen.js"],"names":["React","Component","firebase","TextInput","Button","Snackbar","Portal","Dialog","Paragraph","Provider","PaperProvider","Login","state","name","email","password","phone","isLoading","nameError","emailError","passwordError","phoneError","updateInputVal","val","prop","setState","userLogin","emailVadidation","passwordValidation","auth","signInWithEmailAndPassword","then","res","console","log","errorMessage","props","navigation","navigate","catch","error","message","reg","test","length","styles","preloader","container","inputStyle","loginText","errorText","StyleSheet","create","flex","display","flexDirection","justifyContent","padding","backgroundColor","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","width","height","color","marginTop","textAlign","left","right","top","bottom","position","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, StyleSheet, View,  Alert, ActivityIndicator } from 'react-native'\nimport firebase from '../firebase'\n\nimport {\n  TextInput,\n  Button,\n  Snackbar,\n  Portal,\n  Dialog,\n  Paragraph,\n  Provider as PaperProvider\n} from \"react-native-paper\";\n\nexport default class Login extends Component {\n  \n   \n    state = { \n      name: '',\n      email: '', \n      password: '',\n      phone: '', \n      isLoading: false, \n      nameError: false,\n      emailError: false,\n      passwordError: false,\n      phoneError: false \n    }\n  \n    updateInputVal = (val, prop) => {\n      const state = this.state;\n      state[prop] = val;\n      this.setState(state);\n    }\n\n\n    userLogin = () => {\n      const email = this.emailVadidation()\n      const password = this.passwordValidation()\n      if (email && password) {\n        firebase\n        .auth\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then((res) => {\n        console.log('User logged-in successfully!')\n        this.setState({\n            isLoading: false,\n            email: '', \n            password: '',\n            errorMessage: ''\n        })\n        this.props.navigation.navigate('TodoList')\n        })\n        .catch(error => this.setState({ errorMessage: error.message }))\n      }else {\n        if (!email) { this.setState({emailError: true})}\n        if (!password) { this.setState({passwordError: true})}\n      }\n    }\n      \n    \n    emailVadidation = () => {\n      if (this.state.email === '') {\n        this.setState({emailError: true})\n        return false \n      } \n      let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (reg.test(this.state.email) === false) {\n        this.setState({emailError: true})\n        return false\n      } else {\n        this.setState({emailError: false})\n        return true\n        } \n    } \n\n    passwordValidation = () => {\n      if (this.state.password.length < 8) {\n        this.setState({passwordError: true})\n        return false \n      } else {\n        this.setState({passwordError: false})\n        return true\n      }\n    }\n  \n    render() {  \n        if(this.state.isLoading){\n            return(\n                <View style={styles.preloader}>\n                    <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\n                </View>\n            )\n        }  \n      return (\n        <View style={styles.container}>  \n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChangeText={(val) => this.updateInputVal(val, 'email')}\n            onBlur={() => this.emailVadidation()}\n          />\n           <Text\n            style={styles.error}>\n            {this.state.emailError ? 'Error with email' : ''}\n          </Text>\n          <TextInput\n            style={styles.inputStyle}\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChangeText={(val) => this.updateInputVal(val, 'password')}\n            onBlur={() => this.passwordValidation()}\n            maxLength={15}\n            secureTextEntry={true}\n          />   \n          <Text\n            style={styles.error}>\n            {this.state.passwordError ? 'Error with password' : ''}\n          </Text>  \n          <Button\n            color=\"#621FF7\"\n            mode='contained'\n            onPress={() => this.userLogin()}\n            >Login</Button>   \n          <Text \n            style={styles.loginText}\n            onPress={() => this.props.navigation.navigate('SignUp')}>\n            Don't have account? Click here to signup\n          </Text>\n          <Text style={styles.errorText} >\n            {this.state.errorMessage}\n          </Text>                          \n        </View>\n      );\n    }\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 20,\n      backgroundColor: '#fff'\n    },\n    inputStyle: {\n      marginBottom: 15,\n      paddingBottom: 15,\n      alignSelf: \"center\",\n      borderColor: \"#ccc\",\n      borderBottomWidth: 1,\n      width: '100%',\n      height: '5%'\n    },\n    loginText: {\n      color: '#333333',\n      marginTop: 25,\n      textAlign: 'center'\n    },\n    preloader: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#fff'\n    },\n    errorText:{\n        fontSize:10,\n        color:'red',\n        alignSelf:'center',\n        marginTop:10\n    },\n    error:{\n      fontSize:10,\n      color:'red',\n    },\n  });\n\n  \n"]},"metadata":{},"sourceType":"module"}