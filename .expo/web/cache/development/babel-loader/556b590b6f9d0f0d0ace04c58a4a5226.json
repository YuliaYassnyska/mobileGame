{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/roman/mobileGame/levels/LevelFourth.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons';\nimport Header from \"../components/Header\";\nimport Score from \"../components/Score\";\nimport Card from \"../components/GameCard\";\nimport helpers from \"./helpers\";\n\nvar LevelFourth = function (_React$Component) {\n  _inherits(LevelFourth, _React$Component);\n\n  var _super = _createSuper(LevelFourth);\n\n  function LevelFourth(props) {\n    var _this;\n\n    _classCallCheck(this, LevelFourth);\n\n    _this = _super.call(this, props);\n    _this.renderCards = _this.renderCards.bind(_assertThisInitialized(_this));\n    _this.resetCards = _this.resetCards.bind(_assertThisInitialized(_this));\n    var sources = {\n      'fontawesome': FontAwesome,\n      'entypo': Entypo,\n      'ionicons': Ionicons\n    };\n    var cards = [{\n      src: 'fontawesome',\n      name: 'heart',\n      color: 'red'\n    }, {\n      src: 'entypo',\n      name: 'feather',\n      color: '#7d4b12'\n    }, {\n      src: 'entypo',\n      name: 'flashlight',\n      color: '#f7911f'\n    }, {\n      src: 'entypo',\n      name: 'flower',\n      color: '#37b24d'\n    }, {\n      src: 'entypo',\n      name: 'moon',\n      color: '#ffd43b'\n    }];\n    var clone = JSON.parse(JSON.stringify(cards));\n    _this.cards = cards.concat(clone);\n\n    _this.cards.map(function (obj) {\n      var id = Math.random().toString(36).substring(7);\n      obj.id = id;\n      obj.src = sources[obj.src];\n      obj.is_open = false;\n    });\n\n    _this.cards = _this.cards.shuffle();\n    _this.state = {\n      current_selection: [],\n      selected_pairs: [],\n      score: 0,\n      cards: _this.cards\n    };\n    return _this;\n  }\n\n  _createClass(LevelFourth, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, this.renderRows.call(this)), React.createElement(Score, {\n        score: this.state.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: this.resetCards,\n        title: \"Reset\",\n        color: \"#008CFA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"resetCards\",\n    value: function resetCards() {\n      var cards = this.cards.map(function (obj) {\n        obj.is_open = false;\n        return obj;\n      });\n      cards = cards.shuffle();\n      this.setState({\n        current_selection: [],\n        selected_pairs: [],\n        cards: cards,\n        score: 0\n      });\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this2 = this;\n\n      var contents = this.getRowContents(this.state.cards);\n      return contents.map(function (cards, index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.row,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, _this2.renderCards(cards));\n      });\n    }\n  }, {\n    key: \"renderCards\",\n    value: function renderCards(cards) {\n      var _this3 = this;\n\n      return cards.map(function (card, index) {\n        return React.createElement(Card, {\n          key: index,\n          src: card.src,\n          name: card.name,\n          color: card.color,\n          is_open: card.is_open,\n          clickCard: _this3.clickCard.bind(_this3, card.id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n  }, {\n    key: \"clickCard\",\n    value: function clickCard(id) {\n      var _this4 = this;\n\n      var selected_pairs = this.state.selected_pairs;\n      var current_selection = this.state.current_selection;\n      var score = this.state.score;\n      var index = this.state.cards.findIndex(function (card) {\n        return card.id == id;\n      });\n      var cards = this.state.cards;\n\n      if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\n        cards[index].is_open = true;\n        current_selection.push({\n          index: index,\n          name: cards[index].name\n        });\n\n        if (current_selection.length == 2) {\n          if (current_selection[0].name == current_selection[1].name) {\n            score += 1;\n            selected_pairs.push(cards[index].name);\n          } else {\n            cards[current_selection[0].index].is_open = false;\n            setTimeout(function () {\n              cards[index].is_open = false;\n\n              _this4.setState({\n                cards: cards\n              });\n            }, 500);\n          }\n\n          current_selection = [];\n        }\n\n        this.setState({\n          score: score,\n          cards: cards,\n          current_selection: current_selection\n        });\n      }\n    }\n  }, {\n    key: \"getRowContents\",\n    value: function getRowContents(cards) {\n      var contents_r = [];\n      var contents = [];\n      var count = 0;\n      cards.forEach(function (item) {\n        count += 1;\n        contents.push(item);\n\n        if (count == 3) {\n          contents_r.push(contents);\n          count = 0;\n          contents = [];\n        }\n      });\n      return contents_r;\n    }\n  }]);\n\n  return LevelFourth;\n}(React.Component);\n\nexport { LevelFourth as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  body: {\n    flex: 18,\n    justifyContent: 'space-between',\n    padding: 10,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["/home/roman/mobileGame/levels/LevelFourth.js"],"names":["React","Ionicons","FontAwesome","Entypo","Header","Score","Card","helpers","LevelFourth","props","renderCards","bind","resetCards","sources","cards","src","name","color","clone","JSON","parse","stringify","concat","map","obj","id","Math","random","toString","substring","is_open","shuffle","state","current_selection","selected_pairs","score","styles","container","body","renderRows","call","setState","contents","getRowContents","index","row","card","clickCard","findIndex","indexOf","push","length","setTimeout","contents_r","count","forEach","item","Component","StyleSheet","create","flex","alignSelf","backgroundColor","flexDirection","justifyContent","padding","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport { Ionicons, FontAwesome, Entypo } from '@expo/vector-icons'; // 6.2.2\n\nimport Header from '../components/Header';\nimport Score from '../components/Score';\nimport Card from '../components/GameCard';\n\nimport helpers from './helpers';\n\nexport default class LevelFourth extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.renderCards = this.renderCards.bind(this);\n        this.resetCards = this.resetCards.bind(this);\n\n        let sources = {\n            'fontawesome': FontAwesome,\n            'entypo': Entypo,\n            'ionicons': Ionicons\n        };\n\n        let cards = [\n            {\n                src: 'fontawesome',\n                name: 'heart',\n                color: 'red'\n            },\n            {\n                src: 'entypo',\n                name: 'feather',\n                color: '#7d4b12'\n            },\n            {\n                src: 'entypo',\n                name: 'flashlight',\n                color: '#f7911f'\n            },\n            {\n                src: 'entypo',\n                name: 'flower',\n                color: '#37b24d'\n            },\n            {\n                src: 'entypo',\n                name: 'moon',\n                color: '#ffd43b'\n            },\n        ];\n\n        let clone = JSON.parse(JSON.stringify(cards));\n\n        this.cards = cards.concat(clone);\n        this.cards.map((obj) => {\n            let id = Math.random().toString(36).substring(7);\n            obj.id = id;\n            obj.src = sources[obj.src];\n            obj.is_open = false;\n        });\n\n        this.cards = this.cards.shuffle();\n        this.state = {\n            current_selection: [],\n            selected_pairs: [],\n            score: 0,\n            cards: this.cards\n        }\n\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Header />\n                <View style={styles.body}>\n                    {\n                        this.renderRows.call(this)\n                    }\n                </View>\n                <Score score={this.state.score} />\n                <Button\n                    onPress={this.resetCards}\n                    title=\"Reset\"\n                    color=\"#008CFA\"\n                />\n            </View>\n        );\n    }\n\n\n    resetCards() {\n        let cards = this.cards.map((obj) => {\n            obj.is_open = false;\n            return obj;\n        });\n\n        cards = cards.shuffle();\n\n        this.setState({\n            current_selection: [],\n            selected_pairs: [],\n            cards: cards,\n            score: 0\n        });\n    }\n\n\n    renderRows() {\n\n        let contents = this.getRowContents(this.state.cards);\n        return contents.map((cards, index) => {\n            return (\n                <View key={index} style={styles.row}>\n                    { this.renderCards(cards)}\n                </View>\n            );\n        });\n\n    }\n\n\n    renderCards(cards) {\n        return cards.map((card, index) => {\n            return (\n                <Card\n                    key={index}\n                    src={card.src}\n                    name={card.name}\n                    color={card.color}\n                    is_open={card.is_open}\n                    clickCard={this.clickCard.bind(this, card.id)}\n                />\n            );\n        });\n    }\n\n\n    clickCard(id) {\n        let selected_pairs = this.state.selected_pairs;\n        let current_selection = this.state.current_selection;\n        let score = this.state.score;\n\n        let index = this.state.cards.findIndex((card) => {\n            return card.id == id;\n        });\n\n        let cards = this.state.cards;\n\n        if (cards[index].is_open == false && selected_pairs.indexOf(cards[index].name) === -1) {\n\n            cards[index].is_open = true;\n\n            current_selection.push({\n                index: index,\n                name: cards[index].name\n            });\n\n            if (current_selection.length == 2) {\n                if (current_selection[0].name == current_selection[1].name) {\n                    score += 1;\n                    selected_pairs.push(cards[index].name);\n                } else {\n\n                    cards[current_selection[0].index].is_open = false;\n\n                    setTimeout(() => {\n                        cards[index].is_open = false;\n                        this.setState({\n                            cards: cards\n                        });\n                    }, 500);\n                }\n\n                current_selection = [];\n            }\n\n            this.setState({\n                score: score,\n                cards: cards,\n                current_selection: current_selection\n            });\n\n        }\n\n    }\n\n\n    getRowContents(cards) {\n        let contents_r = [];\n        let contents = [];\n        let count = 0;\n        cards.forEach((item) => {\n            count += 1;\n            contents.push(item);\n            if (count == 3) {\n                contents_r.push(contents)\n                count = 0;\n                contents = [];\n            }\n        });\n\n        return contents_r;\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignSelf: 'stretch',\n        backgroundColor: '#fff'\n    },\n    row: {\n        flex: 1,\n        flexDirection: 'row'\n    },\n    body: {\n        flex: 18,\n        justifyContent: 'space-between',\n        padding: 10,\n        marginTop: 20\n    }\n});\n"]},"metadata":{},"sourceType":"module"}